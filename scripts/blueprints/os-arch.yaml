selector:
  sw.os: 1
  arch.sw: 1
  sw.stack-variant: 1
  sw.blob: '1+'
output:
  filename: Dockerfile
  imageName: "{{this.children.arch.sw.slug}}-{{this.children.sw.os.slug}}"
  type: sw.docker-image.os-arch
  slug: "{{this.children.arch.sw.slug}}-{{this.children.sw.os.slug}}:{{this.children.sw.os.version}}-{{this.children.sw.stack-variant.slug}}"
  path: "{{this.children.arch.sw.slug}}/{{this.children.sw.os.slug}}/{{this.children.sw.os.version}}/{{this.children.sw.stack-variant.slug}}"
  requires:
    - type: hw.device-type
      arch: "{{this.children.arch.sw.slug}}"
  template:
    - name: os-arch
      data: >
        {{import partial="from" combination="sw.os+arch.sw"}}

        LABEL io.balena.architecture="{{this.arch.sw.slug}}"

        {{#sw.blob.qemu}}
        {{import partial="qemu" combination="sw.os+arch.sw"}}
        {{/sw.blob.qemu}}


        {{import partial="base-dependencies" combination="sw.os+arch.sw"}}


        {{import partial="balena-xbuild" combination="sw.os+arch.sw"}}


        {{import partial="os-config" combination="sw.os+arch.sw"}}


        COPY entry.sh /usr/bin/entry.sh

        COPY balena-info /usr/bin/balena-info

        COPY balena-idle /usr/bin/balena-idle

        ENTRYPOINT ["/usr/bin/entry.sh"]


        {{import partial="test" combination="sw.os+arch.sw"}}


        {{import partial="image-info" combination="sw.os+arch.sw"}}
